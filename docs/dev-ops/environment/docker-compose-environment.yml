# 命令执行 docker-compose up -d
version: '3.9'
services:
  mysql:
    image: mysql:8.0.32
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: ahhfzhp20011119
    networks:
      - my-network
    depends_on:
      - alpine
    ports:
      - "13306:3306"
    volumes:
      - ./mysql/sql:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    # HEALTHCHECK 指令告诉 Docker 该如何判断容器的状态是否正常
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      # 两次健康检查的间隔
      interval: 5s
      # 健康检查命令运行超时时间，如果超过这个时间，本次健康检查就被视为失败
      timeout: 10s
      # 当连续失败指定次数后，则将容器状态视为 unhealthy
      retries: 10
      start_period: 15s


  alpine:
    image: alpine:3.18.2
    container_name: alpine
    volumes:
      - mysql-data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: phpmyadmin
    hostname: phpmyadmin
    ports:
      - "8899:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=ahhfzhp20011119
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - my-network

  redis:
    image: redis:7.2.0
    container_name: redis
    restart: always
    hostname: redis
    privileged: true
    ports:
      - "16379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
#      - ./redis:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis-admin:
    image: spryker/redis-commander:0.8.0
    container_name: redis-admin
    hostname: redis-commander
    restart: always
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy

networks:
  my-network:
    driver: bridge

volumes:
  mysql-data: